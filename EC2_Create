

$ aws ec2 describe-vpcs   ## VPC ID 확인


Page.68

## 새로운 보안 그룹 생성

$aws ec2 create-security-group \
    --group-name HelloWorld \
    --description "Hello World Demo" \
    --vpc-id vpc-c981bbaf
    
    ** 그룹 ID확인 할것
    
    

ssh(tcp/22)과 tcp/3000 만 인바운드 트래픽 오픈  --------------------- (기본적으로 모든 아웃바운드 트래픽 허용)

$ aws ec2 authorize-security-group-ingress \
    --group-id "넣을 것" \
    --protocol tcp \
    --port 22 \
    --cidr 0.0.0.0/0
    
$ aws ec2 authorize-security-group-ingress \
    --group-id "넣을 것" \
    --protocol tcp \
    --port 3000 \
    --cidr 0.0.0.0/0



## 보안그룹 적용 확인

$ aws ec2 describe-security-groups \
    --group-id "넣을 것" \
    --output text
    
    
    

** aws ec2 describe-subnets --output table      ------------  옵션 사용해보기
                                     json
                                     text
                                     
                                     
   
  
Page.70    
## ssh키 생성하기 (EC2에서 키페어를 생성하고 사설키를 다운로드)

$ aws ec2 create-key-pair --key-name EffectiveDevOpsAWS
==> 출력값 파일에 저장 ("echo -e (붙이기) > 파일명")

$ echo -e "------BEGIN RSA PRIVATE KEY ~~ > ~/.ssh/EffectiveDevOpsAWS.pem

$ chmod 600 ~/.ssh/EffectiveDevOpsAWS.pem


## EC2 인스턴스 띄우기

$ aws ec2 run-instances \ 
--instance-type t2.micro \
--key-name EffectiveDevOpsAWS \
--security-group-ids "넣을것" \
--image-id ami-4fffc834 \
--subnet-id subnet-899c56c1



## 인스턴스 생성의 진행사항 추적 (aws ec2 run-instances 에서 인스턴스ID 확인)

$ aws ec2 describe-instance-status --instance-ids "인스턴스ID"
==> SystemStatus 값이 Initializing -> ok 로 바뀌면 완료



## EC2 인스턴스 DNS or 공인 IP 찾기

$ aws ec2 describe-instances \
--instance-ids "인스턴스ID" \
--query "Reservation[*].Instances[*].PublicIpAddress"











    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
