


VPC 마법사 4가지 방식 (https://zigispace.net/983)

1. 단일 퍼블릭 서브넷이 있는 VPC

2. 퍼블릭 및 프라이빗 서브넷이 있는 VPC

3. 퍼블릭 및 프라이빗 서브넷이 있고 하드웨어 VPN 액세스를 제공하는 VPC

4. 프라이빗 세브넷만 있고 하드웨어 VPN 액세스를 제공하는 VPC



## 2번 항목인 퍼블릭 및 프라이빗 서브넷이 있는 VPC 생성 진행

1) 마법사 진행전에 탄력적 IP (Elastic IP) 먼저 생성
   마법사로 Private 서브넷을 생성하게 될 경우에 NAT 게이트웨이도 함께 생성하는데, NAT게이트웨에 할당 할 EIP가 필요함

2) 이제 VPC 마법사를 이용해서 VPC 생성에 필요한 값을 입력
   - VPC 내에서 사용할 CIDR 블록을 먼저 지정  (10.0.0.0/20)
   - VPC의 CIDR은 생성 이후 변경이 불가하기 때문에, VPC를 얼마나 확장성 있게 설계할 것인지에 따라서 크기를 잡아야 함.
   - 다음은 Public과 Private 서브넷에 대한 CIDR을 지정하는데, 여기서 사용되는 CIDR은 VPC CIDR 블록 내에 속해야합니다.
     예제에서는 Public은 10.0.0./24 , private는 10.0.4.0/24 로 선언
   - 서브넷 생성 시에는 어떤 가용영역(AZ)에 속할지도 함께 선택
   - 마법사 이용시에는 각각 1개의 서브넷을 생성하지만, VPC생성이 완료된 이후에 추가로 생성이 가능
   - 서브넷 다음에는 Private 서브넷이 외부와 통신하기 위한 NAT게이트웨이의 Elastic IP를 선택
  
  
  //////////////////////////////////////////////////////////////////////////////////////////////////////////////


AWS RDS와 인스턴스 생성 (http://wildpup.cafe24.com/archives/734)

## RDS는 클라우드에서 관계형 데이터베이스를 손쉽게 설정하고 운영 및 조정할 수 있는 서비스이다. 
   RDS에서 사용할 수 있는 데이터베이스는 MySQL, Oracle, MSSQL, PostgreSQL, Aurora를 사용할 수 있다.

## AWS RDS 장점 
   - 간편한 데이터베이스 서비스 배포
   - 완벽한 관리(패치, 백업, 복제)
   - 호환성
   - 빠르고 예상 가능한 성능
   - 보안
   - 저렴함



1. 인스턴스를 생성하기 위해 RDS 관리 페이지로 이동한다.
   - RDS는 Services의 Database 카테고리 내부에 있다. 만약 현재 리전이 서비스 대상 지역으로부터 멀리 떨어진 곳일 경우에는 리전을 변경한다. 
     리전은 상단 헤더 우측에서 변경할 수 있다. 본 포스팅에서는 한국과 가까운 Tokyo로 지정한다.

2. RDS 인스턴스 리스트로 이동한다.
   - Launch DB Instance 버튼을 클릭하여 인스턴스 생성을 시작한다.

3. 데이터베이스 엔진을 선택한다.
   - 제공하는 데이터베이스 엔진에는 MySQL, PostgreSQL, Oracle, Microsoft SQL Server 가 있다. 
     같은 엔진이라도 각 엔진들 내부에는 각기 다른 라이센스 모델이 있다. MySQL은 General Public License이기 때문에 추가 요금이 발생하지 않는다. 
     PostgreSQL 또한 라이센스로 발생되는 추가 요금은 없다. 하지만 Oracle과 MS SQL Server는 추가적인 라이센스 비용이 부과될 수 있다.
     MySQL(Free Tier)을 선택하고 Select 버튼을 클릭한다.

4. 다중 가용 영역 복제와 고성능 I/O를 사용할 것인가를 지정한다.
   - RDS에서는 이중화를 통하여 장애에 대응할 수 있는 다중 사용 영역 복제와 고성능 I/O를 제공하는 Provisioned IOPS Storage를 제공한다. 
     이 둘을 사용하게 되면 추가 요금이 부가된다. 본 포스트는 Free tier에서 진행되므로 No를 선택하고 Next 버튼을 클릭한다.

5. 인스턴스 설정을 한다.
   - License Model : 각 데이터베이스 엔진에 대한 라이센스 모델을 선택한다. MySQL은 general public license를 제공한다.
   - DB Engine Version : 데이터베이스 엔진의 버전을 선택한다.
   - DB Instance Class : 생성할 DB 인스턴스 클래스 이다. EC2같이 RDS도 인스턴스라는 개념이 있다. 
                         인스턴스 클래스라는 개념 또한 EC2에서 말하는 개념과 비슷한 의미이다. 
                         RDS의 인스턴스 클래스에 대한 자세한 정보는 이곳에서 확인할 수 있다. 
                         인스턴스 클래스는 db.t2.medium의 형태로 이루어져 있는데 앞에 db는 동일하고 뒤에 t2는 인스턴스 패밀리 뒤에 medium은 사양을 뜻한다. 
                         m으로 시작하는 패밀리는 일반적인 인스턴스이며 r로 시작되는 패밀리는 다른 클래스보다 메모리가 큰 인스턴스들이다.
   - Multi-AZ Deployment : RDS는 안정성을 위해서 자동 백업과 스냅샷 그리고 다중 사용 영역 배포등의 기능을 제공하는데 Multi-AZ Deployment는 다중 사용 영역 배포를 위한 설정이다.
   - Storage Type : 저장공간의 타입을 지정할 수 있다.
   - Allocated Storage : 저장공간의 용량을 지정한다. 최소 5GB에서 3TB까지 설정할 수 있다.

      그 아래에 인스턴스의 접속을 위한 설정이 계속 된다.
   - DB Instance Identifier : DB의 인스턴스 이름이다.
   - Master Username : DB의 Master 계정의 계정 명이다.
   - Master Password/Confirm Password : 계정의 비밀번호를 지정한다.
   
6. 인스턴스의 추가적인 설정을 계속 진행한다. 
   - VPC : VPC(Virtual Private Cloud) 네트워크를 선택하는 옵션이다. 
           VPC는 가상 네트워크를 정의하고 그 네트워크 안에서 AWS 리소스가 실행될 수 있도록 한다. VPC에 대한 상세 정보는 이곳에서 확인할 수 있다.
   - Subnet Group : DB 인스턴스가 위치할 서브넷이다. Default VPC를 선택했다면 이 항목도 Default로 지정하여 사용한다.
   - Public Accessible : DB를 외부에서 접근할 것인지를 선택한다. No로 설정하면 VPC 내부에서만 접근할 수 있다. 
                         만약 EC2가 동일 VPC 내부에 존재하지 않는다면 역시 접근할 수 없다.
   - Availability Zone : DB 인스턴스가 생성될 사용 영역이다. 접근할 EC2 인스턴스와 동일한 사용 영역 내부에 있는 것이 성능상 유리하다.
   - VPC Security Group : Serurity Group을 지정한다. 외부에서 클라이언트를 이용하여 접근하려면 그에 맞는 Security Group이 지정되어야 한다. 
                          이 부분은 조금 있다가 설명한다.

      그 아래에는 Database Option이 있다.
   - Database Name : 생성될 데이터베이스 이름이다. 
                     만약 아무것도 입력하지 않는다면 인스턴스만 생성되고 데이터베이스는 생성되지 않는다.
   - Database Port : 데이터베이스 포트이다.
   - Parameter Group : MySQL을 실행할 때 필요한 매개변수 그룹이다. 
                       매개변수 그룹은 RDS의 Parameter Groups 메뉴를 이용해서 생성할 수 있다.
   - Option Group : MySQL의 옵션 그룹이다. 옵션 그룹 또한 RDS의 Option Group 메뉴를 이용해서 생성할 수 있다.


         그 뒤를 따라 Backup과 Maintenace 설정이 있다. 이 둘의 설정 UI는 대략 비슷하게 생겼다.
   - 백업 옵션은 자동 백업 옵션으로 백업데이터를 유지하는 기간을 설정하는 Backup Retention Period 셀렉트 박스가 있고 
     Backup Windows에서 select windows를 선택하여 백업 시간을 지정할 수 있다. Duration은 백업에 소요되는 시간이다.
   - 아래에 Maintenance에서 Auto Minor Version Upgrade는 자동으로 마이너 버전을 업그레이드하는 설정으로 아래의 항목은 
     위의 백업 항목과 동일한 사용법을 가지고 있다.
     
     설정이 완료되면 아래에 Launch DB Instance 버튼을 클릭한다.

7. 생성된 인스턴스를 확인한다.
   - 인스턴스 생성이 완료되면 View Your DB Instances 버튼을 클릭한다.

























